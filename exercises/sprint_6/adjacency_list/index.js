// Условие:
// Алла пошла на стажировку в студию графического дизайна,
// где ей дали такое задание: для очень большого числа ориентированных графов преобразовать их список рёбер в список смежности.
// Чтобы побыстрее решить эту задачу, она решила автоматизировать процесс.
// Помогите Алле написать программу, которая по списку рёбер графа будет строить его список смежности.

// Формат ввода:
// В первой строке дано число вершин n (1 ≤ n ≤ 100) и число ребер m (1 ≤ m ≤ n(n-1)).
// В следующих m строках заданы ребра в виде пар вершин (u,v), если ребро ведет от u к v.

// Формат вывода:
// Выведите информацию о рёбрах, исходящих из каждой вершины.
// В строке i надо написать число рёбер, исходящих из вершины i, а затем перечислить вершины,
// в которые ведут эти рёбра –— в порядке возрастания их номеров.

const { textFileInput } = require("../../../utils/textfile_input/index");
const input = "./input.txt";

const solve = (lines) => {
  const [nodes, edges] = lines[0].split(" ");
  const list = [...Array(Number(nodes)).fill(undefined)];

  for (let i = 1; i <= Number(edges); i++) {
    const [u, v] = lines[i].split(" ");
    list[Number(u - 1)]
      ? list[Number(u - 1)].push(Number(v))
      : (list[Number(u - 1)] = [Number(v)]);
  }

  return list
    .map((i) => {
      if (i) return `${i.length} ${i.sort((a, b) => a - b).join(" ")}`;
      if (!i) return "0";
    })
    .join("\n");
};

textFileInput(input, solve);
